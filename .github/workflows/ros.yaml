name: ROS

on:
  push:
    branches:
      - main

jobs:
  build-and-push-image:
    name: Build and push Docker image to Github container registry
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # So now you can use Actions' own caching!
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  test:
    name: Test
    runs-on: ubuntu-latest
    container: ghcr.io/san-soucie/sgdrfros:main
    needs: build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Test
        uses: ./.github/actions/test/

  lint:
    name: Lint (ament_${{ matrix.linter }})
    runs-on: ubuntu-latest
    needs: build-and-push-image
    container: ghcr.io/san-soucie/sgdrfros:main
    strategy:
      fail-fast: false
      matrix:
        linter:
          [cppcheck, cpplint, uncrustify, lint_cmake, xmllint, flake8, pep257]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run linter
        uses: ./.github/actions/lint/
        env:
          LINTER: ${{ matrix.linter }}
